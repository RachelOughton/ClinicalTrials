T_mich = 4*1.5*6
T_epip =  3*5*1.5 + 2*3
L2_epip = 20*10
M = 8*(56/16)
M_CT = 3
P = 30 + 0.25*30 # includes paternity cover for JP
A0 = 9
E = 50
E_CT = 50 # fairly arbitrary - setting and marking coursework for CT4
X = 100
WC = 10
workload_tot = T_mich + T_epip + L2_epip + M + M_CT + P + A0 +E + E_CT + X + WC
workload_scaled = workload_tot / 0.6
workload_scaled
T_mich = 4*1.5*6    # DSSC tutorials michaelmas + easter
T_epip =  3*4*1.5 + 2*3   # Stats modelling + CT4 practicals
L2_epip = 20*10     # CT4 lectures
M = 8*(56/16)    # Decision Theory (assumes both terms?)
M_michonly = 4*(56/16) # DT marking if only Michaelmas
M_CT = 3         # Assignment marking for CT4 - suspect an underestimate!
P = 30 + 0.25*30 # My own project plus paternity cover for JP
A0 = 9           # Advisees
E = 50           # exam and project marking
E_CT = 50        # fairly arbitrary - setting and marking coursework for CT4
X = 100          # Extra stuff
WC = 10          # Workload committee
workload_tot = T_mich + T_epip + L2_epip + M + M_CT + P + A0 +E + E_CT + X + WC
workload_scaled = workload_tot / 0.6
T_mich = 4*1.5*6    # DSSC tutorials michaelmas + easter
T_epip =  3*4*1.5 + 2*3   # Stats modelling + CT4 practicals
L2_epip = 20*10     # CT4 lectures
M = 8*(56/16)    # Decision Theory (assumes both terms?)
M_michonly = 4*(56/16) # DT marking if only Michaelmas
M_CT = 3         # Assignment marking for CT4 - suspect an underestimate!
P = 30 + 0.25*30 # My own project plus paternity cover for JP
A0 = 9           # Advisees
E = 50           # exam and project marking
E_CT = 50        # fairly arbitrary - setting and marking coursework for CT4
X = 100          # Extra stuff
WC = 10          # Workload committee
workload_tot = T_mich + T_epip + L2_epip + M + M_CT + P + A0 +E + E_CT + X + WC
workload_scaled = workload_tot / 0.6
workload_tot_DTmich = T_mich + T_epip + L2_epip + M_michonly + M_CT + P + A0 +E + E_CT + X + WC
workload_scaled_DTmich = workload_tot_DTmich/0.6
workload_scaled
workload_scaled_DTmich
q()
library(maps)
?maps
data("world2MapEnv")
class(world2MapEnv)
data(world2MapEnv)
class(world2MapEnv)
class(world)
data(world)
data("world")
map('world', fill = TRUE, col = 1:10, wrap=c(-180,180) )
map('world', wrap=c(-180,180) )
world = map_data("world")
library(ggplot2)
world = map_data("world")
names(world)
?aes
ggplot(data=world, aes(x=long, y=lat, group = group)) + geom_path()
max(world$group)
?plot
plot(lat~long, data = world[world$group==1,])
plot(lat~long, data = world[world$group==1,], type = "l")
plot(lat~long, data = world[world$group==1,], type = "l", xlim=c(-180,180))
summary(world)
plot(lat~long, data = world[world$group==1,],
type = "l", xlim=c(-180,191), ylim = c(-86, 84))
?lines
for (i in 2:1627){
lines(world$long[world$group==i], world$lat[world$group=2])
for (i in 2:1627){
lines(world$long[world$group==i], world$lat[world$group==i])
}
ggworldplot = ggplot(data=world, aes(x=long, y=lat, group = group)) +
geom_path() +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
ggworldplot
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=10),
lat = rnorm(100, mean=0, sd=30),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(aes(x=long, y=lat, fill=pressure), alpha=0.5)+
scale_fill_continuous(type = "viridis")
storm_df
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, fill=pressure), alpha=0.5)+
scale_fill_continuous(type = "viridis")
ggworldplot = ggplot(data=world, aes(x=long, y=lat)) +
geom_path(aes(group = group)) +
theme_bw() + # this gets rid of the grey background
xlab("Longitude") +
ylab("Latitude")
ggworldplot
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=10),
lat = rnorm(100, mean=0, sd=30),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, fill=pressure), alpha=0.5)+
scale_fill_continuous(type = "viridis")
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure), alpha=0.5)+
scale_color_continuous(type = "viridis")
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=50),
lat = rnorm(100, mean=0, sd=10),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure), alpha=0.5)+
scale_color_continuous(type = "viridis")
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=5),
lat = rnorm(100, mean=0, sd=10),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure), alpha=0.5)+
scale_color_continuous(type = "viridis")
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=5),
lat = rnorm(100, mean=0, sd=10),
pressure = rnorm(100, mean=100, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure),
alpha=0.5) +
scale_color_continuous(type = "viridis")
ggworldplot + # add this on to the world map
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure),
alpha=0.3) +
scale_color_continuous(type = "viridis")
ggworldplot + # add this on to the world map
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure),
alpha=0.4) +
scale_color_continuous(type = "viridis")
2*270
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
model_ancova_capt = anova_test(data=df_hommel, formula = outcome ~ arm + baseline)
model_ancova_capt
lm_capt = lm(outcome~baseline + arm, data = df_hommel)
lm_capt
summary(lm_capt)
plot(model_ancova_capt)
anova(lm_capt)
model_ancova_capt
ggplot(data = df_hommel, aes(x=baseline, fill = arm)) + geom_boxplot()
ggplot(data = df_hommel, aes(y=baseline, fill = arm)) + geom_boxplot()
ggplot(data = df_hommel, aes(y=baseline, fill = arm)) + geom_boxplot() + ylab("Baseline (mmHg)")
ggplot(data = df_hommel, aes(y=baseline, fill = arm)) + geom_boxplot() + ylab("Baseline (mmHg)")
?anova
getwd()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
summary(df_hommel)
levels(df_hommel$arm)
summary(lm_capt)
ggplotRegression(lm_capt)
?geom_smooth
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_smooth(method='lm', formula = outcome ~ baseline + arm)
summary(lm_capt)
summary(lm_capt)$Coef
summary(lm_capt)$Coefficients
names(lm_capt)
summary(lm_capt)$coefficients
summary(lm_capt)$coefficients[,1]
summary(lm_capt)$coefficients[,1]$baseline
class(summary(lm_capt)$coefficients[,1])
coefs = summary(lm_capt)$coefficients[,1]
coef(lm_capt)
coef(lm_capt)[["(Intercept)"]]
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(outcome)"]])
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]])
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]],
col= red)
geom_abline
?geom_abline
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]],
colour = red)
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
?
)
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]],
colour = "red")
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]],
colour = "red") +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]] + coef(lm_capt)[["armPlacebo"]],
colour = "blue")
ggplot(data=df_hommel, aes(x=baseline, y=outcome, col = arm)) +
geom_point() +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]],
colour = "red") +
geom_abline(
slope = coef(lm_capt)[["baseline"]],
intercept = coef(lm_capt)[["(Intercept)"]] + coef(lm_capt)[["armPlacebo"]],
colour = "darkturquoise")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
