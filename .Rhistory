coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
cor(df_run100$outcome[df_run100$arm==0], df_run100$baseline[df_run100$arm == 0])
cor(df_run100$outcome[df_run100$arm==1], df_run100$baseline[df_run100$arm == 1])
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
lm_inta1000 = lm(outcome ~ baseline + arm + sex+ age +arm*age, data=df_run1000)
plot(resid(lm_inta1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
summary(lm_inta1000)
plot(outcome ~ age, data=df_fun1000, col=arm)
plot(outcome ~ age, data=df_run1000, col=arm)
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
df_run1000 = run_trial(df_alloc1000,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
gen_part = function(n_total){
ID = 1:n_total
sex = as.factor(sample(c("M", "F"), size = n_total, replace = T, prob = c(0.6,0.4)))
age = runif(n=n_total, min=50, max=65)
# I want the baseline measurement to be slightly higher in women than in men
# With the treatment we are looking for a reduction
baseline_int = 50 + 0.1*age
baseline = sapply(
1:n_total,
function(i){
rnorm(1, mean=baseline_int[i], sd=3)
}
)
# These will actually be added at the 'run trial' stage in shiny
hidden_norm = rnorm(n=n_total, mean=0, sd=1)
hidden_unif = runif(n=n_total, min=0, max=1)
hidden_cat = as.factor(sample(c("A", "B", "C"), size=n_total, replace=T))
df_part =  data.frame(ID = ID, sex=sex, age=age, baseline = baseline,
hid_norm = hidden_norm,
hid_unif = hidden_unif,
hid_cat = hidden_cat)
}
run_trial = function(
df_alloc,
coef_baseline=1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.3,
sd_err=3
){
n_tot = nrow(df_alloc)
out_temp = coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
df_part100 = gen_part(100)
df_alloc100 = df_part100
df_alloc100$arm = as.factor(sample(c("A", "B"), size = 100, replace=T))
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
lm_prop100 = lm(outcome ~ baseline + arm + age + arm:age, data=df_run100)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_prop100)
plot(resid(lm_lin100)~fitted(lm_lin100), col=as.numeric(df_run100$arm))
plot(resid(lm_int100)~fitted(lm_int100), col=as.numeric(df_run100$arm))
plot(resid(lm_prop100)~fitted(lm_prop100), col=as.numeric(df_run100$arm))
plot(resid(lm_prop100)~df_run100$age, col=as.numeric(df_run100$arm))
df_part1k = gen_part(1000)
df_alloc1k = df_part1k
df_alloc1k$arm = as.factor(sample(c("A", "B"), size = 1000, replace=T))
df_run1k = run_trial(df_alloc1k,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1k = lm(outcome ~ baseline+arm+sex+age, data=df_run1k)
lm_int1k = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1k)
lm_prop1k = lm(outcome ~ baseline + arm + age + arm:age, data=df_run1k)
summary(lm_lin1k)
summary(lm_int1k)
summary(lm_prop1k)
# Resid plot for linear looks OK-ish until you colour by arm
plot(resid(lm_lin1k)~fitted(lm_lin1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_int1k)~fitted(lm_int1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_prop1k)~fitted(lm_prop1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_prop100)~df_run100$age, col=as.numeric(df_run100$arm))
plot(resid(lm_prop1k)~df_run1k$age, col=as.numeric(df_run1k$arm))
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
q()
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/CT4_assignment1_dashboard')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment2/CT4_assignment2')
dis_level = as.factor(sample(c("Mild", "Moderate", "Severe"),
size = n_total, replace = T,
prob = c(0.5,0.3, 0.2)))
n_total = 110
dis_level = as.factor(sample(c("Mild", "Moderate", "Severe"),
size = n_total, replace = T,
prob = c(0.5,0.3, 0.2)))
summary(dis_level)
hist(rnorm(1000, mean=27.5, sd=2))
?runif
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment2/CT4_assignment2')
data(arthritis)
library(multgee)
install.packages("multgee")
library(multgee)
data(arthritis)
?arthritis
arthritis
data("licorice_gargle") # all Likert scale outcomes, not sure about use? Preventing post-op cough type symptoms
library(medicaldata)
data("licorice_gargle")
licorice_gargle
?licorice_gargle
names(licorice_gargle)
ggplot(data=licorice_gargle, aes(x=preOp_pain, fill=preOp_gender)) +
geom_bar(col=1) +
facet_wrap(~preOp_age, nrow=1) +
theme(legend.position = "bottom")
library(ggplot2)
ggplot(data=licorice_gargle, aes(x=preOp_pain, fill=preOp_gender)) +
geom_bar(col=1) +
facet_wrap(~preOp_age, nrow=1) +
theme(legend.position = "bottom")
str(licorice_gargle)
dput(names(licorice_gargle))
unique(licorice_gargle$preOp_asa)
unique(licorice_gargle$preOp_calcBMI)
unique(licorice_gargle$preOp_mallampati)
unique(licorice_gargle$preOp_smoking)
unique(licorice_gargle$preOp_pain)
unique(licorice_gargle$intraOp_surgerySize)
unique(licorice_gargle$extubation_cough)
lic_garg = licorice_gargle[ ,1:8]
# vector of names of columns to be coerced to factor
cols <- c("preOp_gender", "preOp_asa",
"preOp_mallampati", "preOp_smoking", "preOp_pain", "treat")
lic_garg[cols] <- lapply(lic_garg[cols], factor)
# Check the result:
sapply(lic_garg, class)
str(lic_garg)
ggplot(data=lic_garg, aes(x=preOp_pain, fill=preOp_gender)) +
geom_bar(col=1) +
facet_wrap(~preOp_age, nrow=1) +
theme(legend.position = "bottom")
ggplot(data=lic_garg, aes(x=preOp_pain, fill=preOp_gender)) +
geom_bar(col=1) +
facet_wrap(~preOp_smoking, nrow=1) +
theme(legend.position = "bottom")
library(rtables)
library(tibble)
library(dplyr)
install.packages("rtables")
library(rtables)
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_gender"), afun = function(x) {
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
})
tbl2 <- build_table(lyt, ADSL)
tbl2 <- build_table(lyt, lic_garg)
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_BMI"), afun = function(x) {
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
})
tbl2 <- build_table(lyt, lic_garg)
names(lic_garg)
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_calcBMI"), afun = function(x) {
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
})
tbl2 <- build_table(lyt, lic_garg)
tbl2
?rcell
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_calcBMI"), afun = function(x) {
if(is.numeric(x)){
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
} else if (is.factor(x)){
in_rows(
"Count (prop)" = rcell(c(sum(x), count(x)), format = "xx.xx (xx.xx)")
)
}
})
tbl2 <- build_table(lyt, lic_garg)
tbl2
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_calcBMI", "preOp_gender"), afun = function(x) {
if(is.numeric(x)){
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
} else if (is.factor(x)){
in_rows(
"Count (prop)" = rcell(c(sum(x), count(x)), format = "xx.xx (xx.xx)")
)
}
})
tbl2 <- build_table(lyt, lic_garg)
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_calcBMI", "preOp_gender"), afun = function(x) {
if(is.numeric(x)){
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
} else if (is.factor(x)){
in_rows(
"Count (prop)" = rcell(c(length(x), count(x)), format = "xx.xx (xx.xx)")
)
}
})
tbl2 <- build_table(lyt, lic_garg)
lyt <- basic_table() %>%
lyt <- basic_table() %>%
)
lyt <- basic_table() %>%
dim(lic_garc)
dim(lic_garg)
37*0.0130
35*0.0130
0.03014*(5/6)
0.13*60
0.0193 * 366000
library(mvtnorm)
?dmvnorm
covmat = matrix(
c(2,1.5),
c(1.5,3)
)
covmat
?matrix
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T
)
covmat
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
covmat = matrix(
)
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
covmat
dmat = matrix(NA, nrow=101, ncol=101)
for (i in 1:101){
for (j in 1:101){
dmat[i,j] = dmvnorm(c(xvec[i], yvec[j]), mean=c(0,0), sigma = covmat)
}
}
xvec = seq(-2,2, length=101)
yvec = seq(-2,2, length=101)
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
dmat = matrix(NA, nrow=101, ncol=101)
for (i in 1:101){
for (j in 1:101){
dmat[i,j] = dmvnorm(c(xvec[i], yvec[j]), mean=c(0,0), sigma = covmat)
}
}
rep(1:3, 3)
rep(1:3, rep(3,3))
xvec = seq(-2,2, length=51)
yvec = seq(-2,2, length=51)
xcol = rep(xvec, 51)
ycol = rep(yvec, rep(51,51))
mvn_df = data.frame(x=xcol, y=ycol)
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
dcol = rep(NA, 51*51)
for (i in 1:nrow(mvn_df)){
dcol[i,j] = dmvnorm(c(xcol[i], ycol[i]), mean=c(0,0), sigma = covmat)
}
dim(mvn_df)
for (i in 1:nrow(mvn_df)){
dcol[i] = dmvnorm(c(xcol[i], ycol[i]), mean=c(0,0), sigma = covmat)
}
mvn_df$dens = dcol
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour()
library(ggplot2)
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour()
xvec = seq(-4,4, length=51)
yvec = seq(-4,4, length=51)
xcol = rep(xvec, 51)
ycol = rep(yvec, rep(51,51))
mvn_df = data.frame(x=xcol, y=ycol)
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
dcol = rep(NA, 51*51)
for (i in 1:nrow(mvn_df)){
dcol[i] = dmvnorm(c(xcol[i], ycol[i]), mean=c(0,0), sigma = covmat)
}
mvn_df$dens = dcol
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour()
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour() + theme_bw() +
geom_vline(xintercept=c(-2,2), lty=2)
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour() + theme_bw() +
geom_vline(xintercept=c(-2,1.5), lty=2)
# for lecture notes
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials/lecture_notes")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
nres=101
xvec = seq(-4,4, length=nres)
yvec = seq(-4,4, length=nres)
xcol = rep(xvec, nres)
ycol = rep(yvec, rep(nres, nres))
mvn_df = data.frame(x=xcol, y=ycol)
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
dcol = rep(NA, nres*nres)
for (i in 1:nrow(mvn_df)){
dcol[i] = dmvnorm(c(xcol[i], ycol[i]), mean=c(0,0), sigma = covmat)
}
mvn_df$dens = dcol
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour() + theme_bw() +
geom_vline(xintercept=c(-2,1.5), lty=2)
mvn_min2 = mvn_df[mvn_df$x==-2,]
ggplot(data=mvn_min2, aes(x=x, y=dens)) + geom_line()
mvn_min2 = mvn_df[mvn_df$x==-2,]
ggplot(data=mvn_min2, aes(x=y, y=dens)) + geom_line()
mvn_min2$y[mvn_min2$dens == max(mvn_min2$dens)]
mvn_min2 = mvn_df[mvn_df$x==-2,]
dmax_min2 = mvn_min2$y[mvn_min2$dens == max(mvn_min2$dens)]
plot_min2 = ggplot(data=mvn_min2, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_min2) + theme_bw() +
xlab("Y") + ylab("Density")
mvn_15 = mvn_df[mvn_df$x==15,]
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
plot_15 = ggplot(data=mvn_15, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_15) + theme_bw() +
xlab("Y") + ylab("Density")
mvn_15 = mvn_df[mvn_df$x==1.5,]
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
mvn_15 = mvn_df[mvn_df$x==1.5,]
dim(mvn_15)
mvn_df$x
mvn_min2 = mvn_df[mvn_df$x==-2,]
dmax_min2 = mvn_min2$y[mvn_min2$dens == max(mvn_min2$dens)]
plot_min2 = ggplot(data=mvn_min2, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_min2) + theme_bw() +
xlab("Y") + ylab("Density")
mvn_15 = mvn_df[mvn_df$x==1.6,]
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
plot_15 = ggplot(data=mvn_15, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_15) + theme_bw() +
xlab("Y") + ylab("Density")
mvn_15 = mvn_df[mvn_df$x==1.60,]
dim(mvn_15)
dim(mvn_df)
mvn_15 = mvn_df[mvn_df$x==1.44,]
dim(mvn_15)
mvn_15 = mvn_df[unique(mvn_df$x)[80],]
dim(mvn_15)
nres=101
xvec = seq(-4,4, length=nres)
yvec = seq(-4,4, length=nres)
xcol = rep(xvec, nres)
ycol = rep(yvec, rep(nres, nres))
mvn_df = data.frame(x=xcol, y=ycol)
covmat = matrix(
c(2,1.5, 1.5, 3), byrow=T, ncol=2
)
dcol = rep(NA, nres*nres)
for (i in 1:nrow(mvn_df)){
dcol[i] = dmvnorm(c(xcol[i], ycol[i]), mean=c(0,0), sigma = covmat)
}
mvn_df$dens = dcol
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour() + theme_bw() +
geom_vline(xintercept=c(-2,1.5), lty=2)
mvn_min2 = mvn_df[mvn_df$x==-2,]
dmax_min2 = mvn_min2$y[mvn_min2$dens == max(mvn_min2$dens)]
plot_min2 = ggplot(data=mvn_min2, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_min2) + theme_bw() +
xlab("Y") + ylab("Density")
mvn_15 = mvn_df[unique(mvn_df$x)[80],]
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
dim(mvn_15)
mvn_15 = mvn_df[mvn_df$x==unique(mvn_df$x)[80],]
dim(mvn_15)
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
plot_15 = ggplot(data=mvn_15, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_15) + theme_bw() +
xlab("Y") + ylab("Density")
grid.arrange(plot_min2, plot_15, nrow=1 )
unique(mvn_df$x)[80]
unique(mvn_df$x)[70]
unique(mvn_df$x)[72]
unique(mvn_df$x)[71]
mvn_15 = mvn_df[mvn_df$x==unique(mvn_df$x)[71],]
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
plot_15 = ggplot(data=mvn_15, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_15) + theme_bw() +
xlab("Y") + ylab("Density")
mvn_min2 = mvn_df[mvn_df$x==-2,]
dmax_min2 = mvn_min2$y[mvn_min2$dens == max(mvn_min2$dens)]
plot_min2 = ggplot(data=mvn_min2, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_min2) + theme_bw() +
xlab("Y|x = -2") + ylab("Density")
mvn_15 = mvn_df[mvn_df$x==unique(mvn_df$x)[71],]
dmax_15 = mvn_15$y[mvn_15$dens == max(mvn_15$dens)]
plot_15 = ggplot(data=mvn_15, aes(x=y, y=dens)) + geom_line() +
geom_vline(xintercept=dmax_15) + theme_bw() +
xlab("Y|x = 1.6") + ylab("Density")
grid.arrange(plot_min2, plot_15, nrow=1 )
covmat
eigen(covmat)
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
covmat
ggplot(data=mvn_df, aes(x=x, y=y, z=dens)) + geom_contour() + theme_bw() +
geom_vline(xintercept=c(-2,1.6), lty=2) + theme(aspect.ratio=1)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
pnorm(-1)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
