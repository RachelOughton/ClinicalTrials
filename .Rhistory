theme_bw() +
xlab("Longitude") +
ylab("Latitude")
ggworldplot
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=10),
lat = rnorm(100, mean=0, sd=30),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(aes(x=long, y=lat, fill=pressure), alpha=0.5)+
scale_fill_continuous(type = "viridis")
storm_df
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, fill=pressure), alpha=0.5)+
scale_fill_continuous(type = "viridis")
ggworldplot = ggplot(data=world, aes(x=long, y=lat)) +
geom_path(aes(group = group)) +
theme_bw() + # this gets rid of the grey background
xlab("Longitude") +
ylab("Latitude")
ggworldplot
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=10),
lat = rnorm(100, mean=0, sd=30),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, fill=pressure), alpha=0.5)+
scale_fill_continuous(type = "viridis")
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure), alpha=0.5)+
scale_color_continuous(type = "viridis")
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=50),
lat = rnorm(100, mean=0, sd=10),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure), alpha=0.5)+
scale_color_continuous(type = "viridis")
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=5),
lat = rnorm(100, mean=0, sd=10),
pressure = rnorm(100, mean=10, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure), alpha=0.5)+
scale_color_continuous(type = "viridis")
storm_df = data.frame(
long = rnorm(100, mean=-50, sd=5),
lat = rnorm(100, mean=0, sd=10),
pressure = rnorm(100, mean=100, sd=10)
)
ggworldplot +
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure),
alpha=0.5) +
scale_color_continuous(type = "viridis")
ggworldplot + # add this on to the world map
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure),
alpha=0.3) +
scale_color_continuous(type = "viridis")
ggworldplot + # add this on to the world map
geom_point(data = storm_df, aes(x=long, y=lat, col=pressure),
alpha=0.4) +
scale_color_continuous(type = "viridis")
library(mvnorm)
library(MASS)
?mnrnorm
?mvrnorm
set.seed(60007)
x_cor = diag(4)
for (i in 1:3){
for (j in 2:4){
random_corr = runif(1, min=0, max=1)
x_cor[i,j] = random_corr
x_cor[j,i] = random_corr
}
}
x_mat = mvrnorm(n=20, mu=)
x_cor
is.pd(x_cor)
is.positive.definite(x_cor)
library(matrixcalc)
require(matrixcalc)
install.packages("matrixcalc")
require(matrixcalc)
is.positive.definite(x_cor)
n <- 4
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
is.positive.definite(Sigma)
Sigma
set.seed(60007)
n <- 4
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
Sigma
x_mat = mvrnorm(n=20, mu=1, Sigma=Sigma)
x_mat = mvrnorm(n=20, mu=c(1,2,3,4), Sigma=Sigma)
set.seed(60007)
n <- 4
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
x_mat = mvrnorm(n=20, mu=1:4, Sigma=Sigma)
x_mat
names(x_df) = sprintf("x%g", 1:4)
x_df = as.data.frame(x_mat)
names(x_df) = sprintf("x%g", 1:4)
x_df
# Create a dependent variable y, made by a linear combination of x variables
# y is deliberately not dependent on x3
attach(x_df)
x_df$y = 3*x1 + 2*x2 - x4
x_df
lm_x = lm(y~x1+x2+x3+x4, data=x_df)
summary(lm_x)
# Create a dependent variable y, made by a linear combination of x variables
# y is deliberately not dependent on x3
attach(x_df)
x_df$y = 3*x1 + 2*x2 - x4 + rnorm(n=20, mean=0, sd=0.1)
lm_x = lm(y~x1+x2+x3+x4, data=x_df)
summary(lm_x)
set.seed(60007)
n <- 15
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
# Generate a matrix 40 draws from this distribution
x_mat = mvrnorm(n=20, mu=1:n, Sigma=Sigma)
# Turn it into a data frame and name the columns x1 to x<n>
x_df = as.data.frame(x_mat)
names(x_df) = sprintf("x%g", 1:n)
# Create a dependent variable y, made by a linear combination of x variables
# y is deliberately not dependent on x3
attach(x_df)
Sigma
set.seed(60007)
n <- 15
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
# Generate a matrix 40 draws from this distribution
x_mat = mvrnorm(n=20, mu=rep(1,n), Sigma=Sigma)
# Turn it into a data frame and name the columns x1 to x<n>
x_df = as.data.frame(x_mat)
names(x_df) = sprintf("x%g", 1:n)
# Create a dependent variable y, made by a linear combination of x variables
# y is deliberately not dependent on x3
attach(x_df)
# y is just the sum of all the x variables, plus some random error
x_df$y = rowSums(x_df) + rnorm(n=20, mean=0, sd=0.1)
?lm
cat(sprintf("x%g+", 1:15))
lm_x = lm(y~x1+ x2+ x3+ x4+ x5+ x6+ x7+ x8+ x9+ x10+ x11+ x12+ x13+ x14+ x15, data=x_df)
summary(lm_x)
Sigma[3,]
?princomp
pc_x = princomp(x_df[,(n+1)])
pc_x
pc_x = princomp(x_df[,-(n+1)])
pc_x
set.seed(60005)
n <- 15
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
Sigma
# Generate a matrix 40 draws from this distribution
x_mat = mvrnorm(n=20, mu=rep(1,n), Sigma=Sigma)
# Turn it into a data frame and name the columns x1 to x<n>
x_df = as.data.frame(x_mat)
names(x_df) = sprintf("x%g", 1:n)
# Create a dependent variable y, made by a linear combination of x variables
attach(x_df)
# y is just the sum of all the x variables, plus some random error
x_df$y = rowSums(x_df) + rnorm(n=20, mean=0, sd=0.1)
lm_x = lm(y~x1+ x2+ x3+ x4+ x5+ x6+ x7+ x8+ x9+ x10+ x11+ x12+ x13+ x14+ x15, data=x_df)
summary(lm_x)
set.seed(6005)
n <- 15
A <- matrix(runif(n^2)*2-1, ncol=n)
Sigma <- t(A) %*% A
# Generate a matrix 40 draws from this distribution
x_mat = mvrnorm(n=20, mu=rep(1,n), Sigma=Sigma)
# Turn it into a data frame and name the columns x1 to x<n>
x_df = as.data.frame(x_mat)
names(x_df) = sprintf("x%g", 1:n)
# Create a dependent variable y, made by a linear combination of x variables
attach(x_df)
# y is just the sum of all the x variables, plus some random error
x_df$y = rowSums(x_df) + rnorm(n=20, mean=0, sd=0.1)
lm_x = lm(y~x1+ x2+ x3+ x4+ x5+ x6+ x7+ x8+ x9+ x10+ x11+ x12+ x13+ x14+ x15, data=x_df)
summary(lm_x)
Sigma
pc_x = princomp(x_df[,-(n+1)])
summary(pc_x)
screeplot(pc_x)
loadings(pc_x)
load_pcx = loadings(pc_x)
class(load_pcx)
names(load_pcx)
load_pcx%*%x_df[,-16]
attr(load_pcx, "Loadings")
?loadings
pc_x$loadings
load_pcx = pc_x$loadings
class(load_pcx)
biplot(pc_x)
as.matrix(load_pcx)
as.matrix(load_pcx)%*%x_mat
dim(as.matrix(load_pcx))
dim(x_mat)
t(x_mat)%*%as.matrix(load_pcx)
dim(t(x_mat))
dim(x_mat)
pc_x_data = x_mat%*%as.matrix(load_pcx)
cor(pc_x_data)
names(pc_x_data)
class(pc_x_data)
pc_x_df = as.data.frame(pc_x_mat)
pc_x_mat = x_mat%*%as.matrix(load_pcx)
# You can see that now the correlations are [almost] zero
# This therefore solves our problem of multicollinearity
cor(pc_x_mat)
pc_x_df = as.data.frame(pc_x_mat)
names(pc_x_df) = sprintf("pc%g", 1:15)
pc_x_df
pc_x
summary(pc_x)
pc_x_df$y = x_df$y
cat(sprintf("pc%g +", 1:9))
pc_lm = lm(y ~ pc1 + pc2 + pc3 + pc4 + pc5 + pc6 + pc7 + pc8 + pc9, data = pc_x_df)
summary(pc_lm)
cat(sprintf("pc%g +", 1:15))
pc_lm_full = lm(y~pc1 + pc2 + pc3 + pc4 + pc5 + pc6 + pc7 + pc8 + pc9 + pc10 + pc11 + pc12 + pc13 + pc14 + pc15, data=pc_x_df)
summary(pc_lm_full)
summary(pc_x)
pc_lm_red = lm(y~pc1 + pc2 + pc3 + pc4 + pc5 + pc6 + pc7 + pc8 + pc9 + pc10 + pc11 + pc12, data=pc_x_df)
summary(pc_lm_red)
summary(lm_x)
pc_x$loadings
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
tauhat = 38/55  - 17/52
varhat = ((38/55)*(17/55))/55 + ((17/52)*(35/52))/52
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1/0.0567
ggplot() + geom_function(fun = inv_x) + xlim(-1,1) + ylim(-20,10)
inv_x = function(x){1/x}
ggplot() + geom_function(fun = inv_x) + xlim(-1,1) + ylim(-20,10)
ggplot() + geom_function(fun = inv_x) + xlim(-1,1) + ylim(-20,10) +
geom_hline(yintercept=0) +
geom_vline(xintercept=0)
inv_x = function(x){1/x}
ggplot() + geom_function(fun = inv_x) + xlim(-1,1) + ylim(-20,20) +
geom_hline(yintercept=0) +
geom_vline(xintercept=0)
ard_vec = seq(from = -1, to = 1, len = 1000)
inv_vec = 1/ard_vec
ard_vec = seq(from = -1, to = 1, len = 1000)
inv_vec = 1/ard_vec
inv_df = data.frame(x=ard_vec, y=inv_vec)
inv_x = function(x){1/x}
ggplot(data=inf_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-20,20) +
geom_hline(yintercept=0) +
geom_vline(xintercept=0)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-20,20) +
geom_hline(yintercept=0) +
geom_vline(xintercept=0)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0) +
geom_vline(xintercept=0)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0)
xl = -0.0567
xu = 0.676
yl = 1/xl
yu = 1/xu
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=x1, y=yl, yend=-25), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=25), linewidth=0.3, lty=3)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=xl, y=yl, yend=-25), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=25), linewidth=0.3, lty=3)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=xl, y=0, yend=yl), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=0), linewidth=0.3, lty=3)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=xl, y=0, yend=yl), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=0), linewidth=0.3, lty=2)
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=xl, y=0, yend=yl), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=0), linewidth=0.3, lty=2) +
geom_segment(aes(x=0, xend=0, y=yl, yend = -25), linewidth=1) +
geom_segment(aes(x=0, xend=0, y=yu, yend=25))
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=xl, y=0, yend=yl), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=0), linewidth=0.3, lty=2) +
geom_segment(aes(x=0, xend=xl, y=yl, yend=yl), linewidth=0.3, lty=3) +
geom_segment(aes(x=0, xend=xu, y=yu, yend=yu), linewidth=0.3, lty=3) +
geom_segment(aes(x=0, xend=0, y=yl, yend = -25), linewidth=1) +
geom_segment(aes(x=0, xend=0, y=yu, yend=25)) +
xlab("ARD") + ylab("NNT")
ggplot(data=inv_df, aes(x=x, y=y)) + geom_path() + xlim(-1,1) + ylim(-25,25) +
geom_hline(yintercept=0, size=0.3) +
geom_vline(xintercept=0, size=0.3) +
geom_segment(aes(x = xl, xend=xu, y=0, yend=0), linewidth=1) +
geom_segment(aes(x=xl, xend=xl, y=0, yend=yl), linewidth=0.3, lty=2) +
geom_segment(aes(x=xu, xend=xu, y=yu, yend=0), linewidth=0.3, lty=2) +
geom_segment(aes(x=0, xend=xl, y=yl, yend=yl), linewidth=0.3, lty=3) +
geom_segment(aes(x=0, xend=xu, y=yu, yend=yu), linewidth=0.3, lty=3) +
geom_segment(aes(x=0, xend=0, y=yl, yend = -25), linewidth=1) +
geom_segment(aes(x=0, xend=0, y=yu, yend=25)) +
xlab("ARD") + ylab("NNT") + theme_bw()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
fun_LHS = function(x){(38/55 - x)^2}
fun_RHS = function(x){qnorm(0.975)*(x*(1-x))/55}
ggplot() + geom_function(fun = fun_LHS) + xlim(-1,1.5)
ggplot() + geom_function(fun = fun_LHS) + xlim(-1,1.5) +
geom_function(fun=fun_RHS)
ggplot() + geom_function(fun = fun_LHS) + xlim(0,1) +
geom_function(fun=fun_RHS)
ggplot() + geom_function(fun = fun_LHS) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS)
ggplot() + geom_function(fun = fun_LHS) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
xlab(expression(pi))
ggplot() + geom_function(fun = fun_LHS) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
xlab(expression(pi)) + ylab("")
ggplot() + geom_function(fun = fun_LHS) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
xlab(expression(pi)) + ylab("") + theme_bw()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
quad_fun = function(a,b,c){
disc = b^2 - 4*a*c
lower = (-b - sqrt(disc))/(2*a)
upper = (-b + sqrt(disc))/(2*a)
c(lower, upper)
}
pT = 38/55
quad_fun(
a = 1 + qnorm(0.975)/55,
b = -2*pT - qnorm(0.975)/55,
c = pT^2
)
qf_pt = quad_fun(
a = 1 + qnorm(0.975)/55,
b = -2*pT - qnorm(0.975)/55,
c = pT^2
)
ggplot() + geom_function(fun = fun_LHS) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red")
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS, lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red")
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS, lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red") +
geom_vline(xintercept = pT, colour = "red", lty=2)
const_RHS = qnorm(0.975)*pT*(1-pT)/55
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", lty=2) +
geom_vline(xintercept = pT, colour = "red")
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", linewidth=0.8) +
geom_vline(xintercept = pT, colour = "red", linewidth=0.3)
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", linewidth=0.3) +
geom_vline(xintercept = pT, colour = "red", linewidth=0.8)
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", linewidth=0.4) +
geom_vline(xintercept = pT, colour = "red", linewidth=0.8)
stand_CI = c(pT - qnorm(0.975)*pT*(1-pT)/55, pT + qnorm(0.975)*pT*(1-pT)/55)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
stand_CI = c(pT - qnorm(0.975)*sqrt(pT*(1-pT)/55), pT + qnorm(0.975)*sqrt(pT*(1-pT)/55))
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", linewidth=0.4) +
geom_vline(xintercept = pT, colour = "red", linewidth=0.8) +
geom_vline(xintercept = stand_CI, lty=3, col="red", linewidth=0.4)
pT
38/55
fun_LHS = function(x){(38/55 - x)^2}
fun_RHS = function(x){qnorm(0.975)^2*(x*(1-x))/55}
const_RHS = qnorm(0.975)*pT*(1-pT)/55
stand_CI = c(pT - qnorm(0.975)*sqrt(pT*(1-pT)/55), pT + qnorm(0.975)*sqrt(pT*(1-pT)/55))
qf_pt = quad_fun(
a = 1 + (qnorm(0.975)^2)/55,
b = -2*pT - (qnorm(0.975)^2)/55,
c = pT^2
)
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", linewidth=0.4) +
geom_vline(xintercept = pT, colour = "red", linewidth=0.8) +
geom_vline(xintercept = stand_CI, lty=3, col="red", linewidth=0.4)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
pC = 17/52
nC = 52
fun_LHSc = function(x){(pC - x)^2}
fun_RHSc = function(x){qnorm(0.975)^2*(x*(1-x))/nC}
const_RHSc = (qnorm(0.975)^2)*pC*(1-pC)/nC
stand_CIc = c(pC - qnorm(0.975)*sqrt(pC*(1-pC)/nC), pC + qnorm(0.975)*sqrt(pC*(1-pC)/nC))
qf_ptc = quad_fun(
a = 1 + (qnorm(0.975)^2)/nC,
b = -2*pC - (qnorm(0.975)^2)/nC,
c = pC^2
)
ggplot() + geom_function(fun = fun_LHSc, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHSc) +
geom_hline(aes(yintercept = const_RHSc), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_ptc, colour = "red", linewidth=0.4) +
geom_vline(xintercept = pC, colour = "red", linewidth=0.8) +
geom_vline(xintercept = stand_CIc, lty=3, col="red", linewidth=0.4)
ggplot() + geom_function(fun = fun_LHSc, lty=2) + xlim(0,0.6) +
geom_function(fun=fun_RHSc) +
geom_hline(aes(yintercept = const_RHSc), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_ptc, colour = "red", linewidth=0.4) +
geom_vline(xintercept = pC, colour = "red", linewidth=0.8) +
geom_vline(xintercept = stand_CIc, lty=3, col="red", linewidth=0.4)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1/50
0.02 - qnorm(0.975)*sqrt(0.02*0.98/50)
0.02 + qnorm(0.975)*sqrt(0.02*0.98/50)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
quad_fun = function(a,b,c){
disc = b^2 - 4*a*c
lower = (-b - sqrt(disc))/(2*a)
upper = (-b + sqrt(disc))/(2*a)
c(lower, upper)
}
peg = 0.02
quad_fun(
a = 1 + qnorm(0.975)/50,
b = -2*peg - qnorm(0.975)/50,
c = peg^2
)
fun_LHSeg = function(x){(0.02 - x)^2}
fun_RHSeg = function(x){qnorm(0.975)^2*(x*(1-x))/50}
const_RHSeg = (qnorm(0.975)^2)*peg*(1-peg)/50
ggplot() + geom_function(fun = fun_LHS, lty=2) + xlim(0.4,0.9) +
geom_function(fun=fun_RHS) +
geom_hline(aes(yintercept = const_RHS), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_pt, colour = "red", linewidth=0.4) +
geom_vline(xintercept = pT, colour = "red", linewidth=0.8) +
geom_vline(xintercept = stand_CI, lty=3, col="red", linewidth=0.4)
qf_eg = quad_fun(
a = 1 + qnorm(0.975)/50,
b = -2*peg - qnorm(0.975)/50,
c = peg^2
)
ggplot() + geom_function(fun = fun_LHSeg, lty=2) + xlim(-0.1,0.2) +
geom_function(fun=fun_RHSeg) +
geom_hline(aes(yintercept = const_RHSeg), lty=3) +
xlab(expression(pi)) + ylab("") + theme_bw() +
geom_vline(xintercept = qf_eg, colour = "red", linewidth=0.4) +
geom_vline(xintercept = peg, colour = "red", linewidth=0.8) +
geom_vline(xintercept = c(-0.0188, 0.0588), lty=3, col="red", linewidth=0.4)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
