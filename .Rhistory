"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
} else if (is.factor(x)){
in_rows(
"Count (prop)" = rcell(c(sum(x), count(x)), format = "xx.xx (xx.xx)")
)
}
})
tbl2 <- build_table(lyt, lic_garg)
lyt <- basic_table() %>%
split_cols_by("treat") %>%
analyze(vars = c("preOp_age", "preOp_calcBMI", "preOp_gender"), afun = function(x) {
if(is.numeric(x)){
in_rows(
"Mean (sd)" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
"Range" = rcell(range(x), format = "xx.xx - xx.xx")
)
} else if (is.factor(x)){
in_rows(
"Count (prop)" = rcell(c(length(x), count(x)), format = "xx.xx (xx.xx)")
)
}
})
tbl2 <- build_table(lyt, lic_garg)
lyt <- basic_table() %>%
lyt <- basic_table() %>%
)
lyt <- basic_table() %>%
dim(lic_garc)
dim(lic_garg)
37*0.0130
35*0.0130
0.03014*(5/6)
0.13*60
0.0193 * 366000
data("iris")
str(iris)
ggplot(data=iris, aes(x=Sepal.Length, fill=Species)) + geom_histogram()
library(ggplot2)
ggplot(data=iris, aes(x=Sepal.Length, fill=Species)) + geom_histogram()
ggplot(data=iris, aes(x=Sepal.Length, fill=Species)) + geom_histogram(position="dodge")
ggplot(data=iris, aes(x=Sepal.Length, fill=Species)) + geom_histogram(position="dodge", bins=6)
install.packages("multigroup")
library(multigroup)
TBWvariance(iris, Species)
TBWvariance(iris, iris$Species)
?TBWvariance
iris
TBWvariance(iris[,1], iris$Species)
TBWvariance(iris["Sepal.Length"], iris$Species)
var(iris$Sepal.Length)
between.var = function(
data,
groupvec
){
groups = levels(as.factor(groupvec))
ng = length(groups)
means = sapply(1:ng, function(i){mean(data[groupvec == groups[i]])})
mean = mean(data)
ssqvec = sapply(1:ng, function(i){(means[i]-mean)^2})
ssqvec/(ng-1)
}
between.var(iris$Sepal.Length, iris$Species)
between.var = function(
data,
groupvec
){
groups = levels(as.factor(groupvec))
ng = length(groups)
means = sapply(1:ng, function(i){mean(data[groupvec == groups[i]])})
mean = mean(data)
ssqvec = sapply(1:ng, function(i){(means[i]-mean)^2})
sum(ssqvec)/(ng-1)
}
between.var(iris$Sepal.Length, iris$Species)
var(sepal.length)
var(iris$Sepal.Length
)
debug(between.var)
between.var(iris$Sepal.Length, iris$Species)
groups
ng
means
mean
ssqvec
ssqvec
0.84^2
sum(ssqvec)/3
between.var = function(
data,
groupvec
){
groups = levels(as.factor(groupvec))
ng = length(groups)
ntot = length(data)
means = sapply(1:ng, function(i){mean(data[groupvec == groups[i]])})
njvec = sapply(1:ng, function(i){length(data[groupvec == groups[i]])})
mean = mean(data)
ssqvec = sapply(1:ng, function(i){njvec[i]*(means[i]-mean)^2})
sum(ssqvec)/(ntot-ng)
}
between.var(iris$Sepal.Length, iris$Species)
library(fivethirtyeight)
install.packages("fivethirtyeight")
library(fivethirtyeight)
data(bechdel)
?bechdel
data(mad_men)
?TBWvariance
TBWvariance
within.var = function(
data,
groupvec
){
groups = levels(as.factor(groupvec))
ng = length(groups)
ntot = length(data)
means = sapply(1:ng, function(i){mean(data[groupvec == groups[i]])})
njvec = sapply(1:ng, function(i){length(data[groupvec == groups[i]])})
g_sums = rep(NA, ng)
for (j in 1:ng){
data_j = data[groupvec == groups[j]]
for (i in 1:njvec[j]){
ssqvec = (data_j[i] - means[j])^2
g_sums[j] = sum(ssqvec)/(njvec[i]-1)
}
}
sum(g_sums)
}
within.var(iris$Sepal.Length, iris$Species)
debug(within.var)
within.var(iris$Sepal.Length, iris$Species)
groups
ng
ntot
njvec
g_sums
within.var = function(
data,
groupvec
){
groups = levels(as.factor(groupvec))
ng = length(groups)
ntot = length(data)
means = sapply(1:ng, function(i){mean(data[groupvec == groups[i]])})
njvec = sapply(1:ng, function(i){length(data[groupvec == groups[i]])})
g_sums = rep(NA, ng)
for (j in 1:ng){
data_j = data[groupvec == groups[j]]
ssqvec = rep(NA, njvec[j])
for (i in 1:njvec[j]){
ssqvec[i] = (data_j[i] - means[j])^2
}
g_sums[j] = sum(ssqvec)/(njvec[i]-1)
}
sum(g_sums)
}
between.var(iris$Sepal.Length, iris$Species)
within.var(iris$Sepal.Length, iris$Species)
debug(within.vRar)
debug(within.var)
within.var(iris$Sepal.Length, iris$Species)
njvec
data_j
ssqvec
g_sums
ssqvec
sum(ssqvec)
sum(ssqvec)/(njvec[i]-1)
sum(ssqvec)/(njvec[j]-1)
within.var
within.var = function(
data,
groupvec
){
groups = levels(as.factor(groupvec))
ng = length(groups)
ntot = length(data)
means = sapply(1:ng, function(i){mean(data[groupvec == groups[i]])})
njvec = sapply(1:ng, function(i){length(data[groupvec == groups[i]])})
g_sums = rep(NA, ng)
for (j in 1:ng){
data_j = data[groupvec == groups[j]]
ssqvec = rep(NA, njvec[j])
for (i in 1:njvec[j]){
ssqvec[i] = (data_j[i] - means[j])^2
}
g_sums[j] = sum(ssqvec)/(njvec[j]-1)
}
sum(g_sums)
}
between.var(iris$Sepal.Length, iris$Species)
within.var(iris$Sepal.Length, iris$Species)
TBWvariance(iris["Sepal.Length"], iris$Species)
var(iris$Sepal.Length)
?Veteran
library(survival)
?veteran
knitr::opts_chunk$set(echo = TRUE)
km_va = survfit(Surv(time, status) ~ trt, data=veteran)
autoplot(km_va)
library(ggplot2)
?require
km_va = survfit(Surv(time, status) ~ trt, data=veteran)
autoplot(km_va)
summary(km_va)
?autoplot
km_va = survfit(Surv(time, status) ~ trt, data=veteran)
autoplot(km_va)
knitr::opts_chunk$set(echo=FALSE, message = FALSE, warning = FALSE)
htmltools::tagList(rmarkdown::html_dependency_font_awesome())
# This line sometimes needs commenting out to first generate the html file
options(knitr.table.format = function() {
if (knitr::is_latex_output())
"latex" else "pipe"
})
library(ggfortify)
autoplot(km_va)
autoplot(km_va, conf.int=F)
sr_va = survreg(Surv(time, status) ~ trt, dist='weibull', data=veteran)
autoplot(sr_va)
summary(sr_va)
str(vetera)
str(veteran)
summary(veteran$trt)
sr_va = survreg(Surv(time, status) ~ as.factor(trt), dist='weibull', data=veteran)
tpred_vaA = predict(sr_va, newdata=list(trt=1),type="quantile",p=seq(.01,.99,by=.01))
tpred_vaB = predict(sr_va, newdata=list(trt=1),type="quantile",p=seq(.01,.99,by=.01))
va_weib_df = data.frame(
time = c(tpred_vaA, tpred_vaB),
prob = c(seq(.01,.99,by=.01), seq(.01,.99,by=.01)),
trt = as.factor(c(rep(1, 99), rep(1, 99))))
plot(va_km_fit, xlab="Time", ylab = "S(t)", col=c(1,2))
plot(va_km, xlab="Time", ylab = "S(t)", col=c(1,2))
plot(km_va, xlab="Time", ylab = "S(t)", col=c(1,2))
lines(va_weib_df$time[va_weib_df$trt==1], 1-va_weib_df$prob[va_weib_df$trt==1], type="l", col=1, lty=2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggfortify)
library(survival)
autoplot(km_va, conf.int=F) + geom_line(data=va_weib_df, aes(x=time, y=1-prob, col=trt))
tpred_vaB = predict(sr_va, newdata=list(trt=2),type="quantile",p=seq(.01,.99,by=.01))
va_weib_df = data.frame(
time = c(tpred_vaA, tpred_vaB),
prob = c(seq(.01,.99,by=.01), seq(.01,.99,by=.01)),
trt = as.factor(c(rep(1, 99), rep(1, 99))))
autoplot(km_va, conf.int=F) + geom_line(data=va_weib_df, aes(x=time, y=1-prob, col=trt))
va_weib_df
tpred_vaA = predict(sr_va, newdata=list(trt=1),type="quantile",p=seq(.01,.99,by=.01))
tpred_vaB = predict(sr_va, newdata=list(trt=2),type="quantile",p=seq(.01,.99,by=.01))
va_weib_df = data.frame(
time = c(tpred_vaA, tpred_vaB),
prob = c(seq(.01,.99,by=.01), seq(.01,.99,by=.01)),
trt = as.factor(c(rep(1, 99), rep(2, 99))))
autoplot(km_va, conf.int=F) + geom_line(data=va_weib_df, aes(x=time, y=1-prob, col=trt))
coxph(formula = Surv(time, status)~as.factor(trt), data=veteran)
str(veteran)
?veteran
coxph(formula = Surv(time, status)~as.factor(trt) + celltype + age + diagtime + prior, data=veteran)
km_va2 = survfit(Surv(time, status) ~ as.factor(trt)+celltype, data=veteran)
autoplot(km_va2, conf.int=F)
km_va2 = survfit(Surv(time, status) ~ celltype, data=veteran)
autoplot(km_va2, conf.int=F)
q()
names(indo_fact)
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)))
resp_df
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)))
resp_sum
str(resp_df)
?group_by
resp_sum = resp_df %>%
group_by(age10, centre, treatment) %>%
summarise(mean = mean(as.numeric(status)))
?summarise
resp_sum = resp_df %>%
group_by(age10, centre, treatment) %>%
summarise(mean = mean(as.numeric(status)), .groups="keep")
resp_sum
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), .groups="keep")
resp_sum
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), n=count(), .groups="keep")
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), n=nrow(), .groups="keep")
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), n=count(age10), .groups="keep")
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), n=length(age10), .groups="keep")
resp_sum
names(indo_fact)
names(indo_rct)
indo_sum = indo_rct %>%
group_by(site, risk, rx) %>%
summarise(mean = mean(as.numeric(outcome)), n=length(id), .groups="keep")
indo_sum
levels(indo_rct$site)
indo_sum[indo_sum$site %in% c("1_UM", "2_IU"),]
names(indo_sum)
fit_sum = predict(glm_indo, newdata=indo_sum[,1:3], se.fit=T, type="response")
indo_sum$fit = fit_sum$fit
indo_sum$fit_se = fit_sum$se.fit
?facet_wrap
ggplot(data=indo_sum[indo_sum$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(site))
indo_sum = indo_rct %>%
group_by(site, risk, rx) %>%
summarise(est = mean(as.numeric(outcome)), n=length(id), .groups="keep")
indo_sum = indo_sum[indo_sum$site %in% c("1_UM", "2_IU"),]
fit_sum = predict(glm_indo, newdata=indo_sum[,1:3], se.fit=T, type="response")
indo_sum$fit = fit_sum$fit
indo_sum$fit_se = fit_sum$se.fit
ggplot(data=indo_sum[indo_sum$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(site))
indo_sum = indo_rct %>%
group_by(site, risk, rx) %>%
summarise(est = mean(as.numeric(outcome)), size=length(id), .groups="keep")
indo_sum = indo_sum[indo_sum$site %in% c("1_UM", "2_IU"),]
fit_sum = predict(glm_indo, newdata=indo_sum[,1:3], se.fit=T, type="response")
indo_sum$fit = fit_sum$fit
indo_sum$fit_se = fit_sum$se.fit
ggplot(data=indo_sum[indo_sum$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(site))
## what columns do I want?
# site, risk, rx
# minus one for mean because outcome is 1 or 2
indo_sum = indo_rct %>%
group_by(site, risk, rx) %>%
summarise(est = mean(as.numeric(outcome))-1, size=length(id), .groups="keep")
indo_sum = indo_sum[indo_sum$site %in% c("1_UM", "2_IU"),]
fit_sum = predict(glm_indo, newdata=indo_sum[,1:3], se.fit=T, type="response")
indo_sum$fit = fit_sum$fit
indo_sum$fit_se = fit_sum$se.fit
ggplot(data=indo_sum[indo_sum$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(site))
ggplot(data=indo_sum[indo_sum$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(rx))
ggplot(data=indo_sum, aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(rx))
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
## what columns do I want?
# site, risk, rx
# minus one for mean because outcome is 1 or 2
indo_sum = indo_rct %>%
group_by(site, risk, rx) %>%
summarise(est = mean(as.numeric(outcome))-1, size=length(id), .groups="keep")
indo_sum = indo_sum[indo_sum$site %in% c("1_UM", "2_IU"),]
fit_sum = predict(glm_indo, newdata=indo_sum[,1:3], se.fit=T, type="response")
indo_sum$fit = fit_sum$fit
indo_sum$fit_se = fit_sum$se.fit
ggplot(data=indo_sum, aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars(rx))
ggplot(data=indo_sum, aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap(vars("rx"))
names(indo_rct)
names(indo_sum)
ggplot(data=indo_sum, aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")
ggplot(data=indo_sum, aes(x=risk, col=rx)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")
?facet_wrap
ggplot(data=indo_sum, aes(x=risk, col=size)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap("rx")
ggplot(data=indo_sum, aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap("rx")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
ggplot(data=indo_sum, aes(x=risk, col=rx)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")+
facet_wrap("site") + theme(legend.position = "bottom")
## Write some code to do this, use facet_wrap, change it in the binary chapter too
## How do I find the fitted value? Min-max of the range of age, or mean?
resp_df$age10 = round(resp_df$age, -1)
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), n=length(age10), .groups="keep")
resp_sum
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status)), n=length(age10), .groups="keep")
ggplot(data=resp_sum, aes(x=age10, col=treatment)) +
geom_point(aes(y=mean, size=n), pch=16) +
theme_bw()+
facet_wrap("treatment") + theme(legend.position = "bottom")
resp_sum = resp_df %>%
group_by(age10, centre, treatment, status0) %>%
summarise(mean = mean(as.numeric(status))-1, n=length(age10), .groups="keep")
ggplot(data=resp_sum, aes(x=age10, col=treatment)) +
geom_point(aes(y=mean, size=n), pch=16) +
theme_bw()+
facet_wrap("treatment") + theme(legend.position = "bottom")
ggplot(data=resp_sum, aes(x=age10, col=treatment)) +
geom_point(aes(y=mean, size=n), pch=16) +
theme_bw()+
facet_wrap(c("treatment", "status0")) + theme(legend.position = "bottom")
ggplot(data=resp_sum, aes(x=age10, col=treatment)) +
geom_point(aes(y=mean, size=n), pch=16) +
theme_bw()+
facet_wrap(c("centre", "status0")) + theme(legend.position = "bottom")
?facet_wrap
?round
summary(model3)
names(resp_df)
fit_resp = predict(model3, newdata=resp_df, se.fit=T, type="response")
obs_plot + geom_line(data=resp_df, aes(x=age, y=fit))
obs_plot = ggplot(data=resp_sum, aes(x=age10, col=treatment)) +
geom_point(aes(y=mean, size=n), pch=16) +
theme_bw()+
facet_wrap(c("centre", "status0")) + theme(legend.position = "bottom")
fit_resp = predict(model3, newdata=resp_df, se.fit=T, type="response")
resp_df$fit = fit_resp$fit
resp_df$fit_se = fit_resp$se.fit
obs_plot + geom_line(data=resp_df, aes(x=age, y=fit))
?geom_ribbon
obs_plot + geom_line(data=resp_df, aes(x=age, y=fit)) +
geom_ribbon(data=resp_df, aes(x=age, ymin = fit - 1.96*fit_se, ymax = fit + 1.96*fit_se))
obs_plot + geom_line(data=resp_df, aes(x=age, y=fit)) +
geom_ribbon(data=resp_df, aes(x=age, ymin = fit - 1.96*fit_se, ymax = fit + 1.96*fit_se, fill = treatment), alpha=0.3)
obs_plot + geom_line(data=resp_df, aes(x=age, y=fit)) +
geom_ribbon(data=resp_df, aes(x=age, ymin = fit - 1.96*fit_se, ymax = fit + 1.96*fit_se, fill = treatment), alpha=0.3, col="white")
?indo_rct
?respiratory
summary(model3)
est_logOR = summary(model3)$coefficients
est_lorOR
est_logOR
est_logOR[3,1]
c(est_logOR - qnorm(0.975)*se_logOR, est_logOR + qnorm(0.975)*se_logOR)
est_logOR = summary(model3)$coefficients[3,1]
se_logOR = summary(model3)$coefficients[3,2]
c(est_logOR - qnorm(0.975)*se_logOR, est_logOR + qnorm(0.975)*se_logOR)
logOR_CI = c(est_logOR - qnorm(0.975)*se_logOR, est_logOR + qnorm(0.975)*se_logOR)
exp(logOR_CI)
model2
summary(model1)
summary(model2)
model3
summary(model3)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?colon
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
q()
