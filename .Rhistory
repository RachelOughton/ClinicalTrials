coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
plot(resid(lm_lin1000)~fitted(lm_lin1000))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_alloc1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
summary(lm_lin1000)
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
plot(resid(lm_int1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
lm_inta1000 = lm(outcome ~ baseline + arm + sex+ age +arm*age, data=df_run1000)
summary(lm_inta1000)
plot(outcome ~ age, data=df_run1000, col=as.numeric(arm))
run_trial = function(
df_alloc,
intercept,
coef_baseline,
coef_arm,
coef_sex,
coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = intercept + coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
intercept=50,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
df_part1000 = gen_part(1000)
df_alloc1000 = df_part1000
df_alloc1000$arm = sample(c("A", "B"), size=1000, replace=T)
df_run1000 = run_trial(df_alloc100,
intercept=50,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
df_run1000 = run_trial(df_alloc100,
intercept=50,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
lm_inta1000 = lm(outcome ~ baseline + arm + sex+ age +arm*age, data=df_run1000)
cor(df_run100$outcome[df_run100$arm==0], df_run100$baseline[df_run100$arm == 0])
cor(df_run100$outcome[df_run100$arm==1], df_run100$baseline[df_run100$arm == 1])
plot(resid(lm_inta1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
plot(df_run1000$outcome ~ df_run1000$age)
plot(df_run1000$baseline ~ df_run1000$age)
plot(df_run1000$outcome ~ df_run1000$age)
df_run1000 = run_trial(df_alloc100,
intercept=0,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
lm_inta1000 = lm(outcome ~ baseline + arm + sex+ age +arm*age, data=df_run1000)
plot(resid(lm_inta1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
cor(df_run100$outcome[df_run100$arm==0], df_run100$baseline[df_run100$arm == 0])
cor(df_run100$outcome[df_run100$arm==1], df_run100$baseline[df_run100$arm == 1])
plot(df_run1000$outcome ~ df_run1000$arm)
plot(df_run1000$outcome ~ df_run1000$age)
run_trial = function(
df_alloc,
intercept,
coef_baseline,
coef_arm,
coef_sex,
coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = intercept + coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
intercept=50,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
df_part1000 = gen_part(1000)
df_alloc1000 = df_part1000
df_alloc1000$arm = sample(c("A", "B"), size=1000, replace=T)
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
run_trial = function(
df_alloc,
coef_baseline,
coef_arm,
coef_sex,
coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = intercept + coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
run_trial = function(
df_alloc,
coef_baseline,
coef_arm,
coef_sex,
coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
df_part1000 = gen_part(1000)
df_alloc1000 = df_part1000
df_alloc1000$arm = sample(c("A", "B"), size=1000, replace=T)
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
cor(df_run100$outcome[df_run100$arm==0], df_run100$baseline[df_run100$arm == 0])
cor(df_run100$outcome[df_run100$arm==1], df_run100$baseline[df_run100$arm == 1])
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
lm_inta1000 = lm(outcome ~ baseline + arm + sex+ age +arm*age, data=df_run1000)
plot(resid(lm_inta1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
summary(lm_inta1000)
plot(outcome ~ age, data=df_fun1000, col=arm)
plot(outcome ~ age, data=df_run1000, col=arm)
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
df_run1000 = run_trial(df_alloc1000,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
gen_part = function(n_total){
ID = 1:n_total
sex = as.factor(sample(c("M", "F"), size = n_total, replace = T, prob = c(0.6,0.4)))
age = runif(n=n_total, min=50, max=65)
# I want the baseline measurement to be slightly higher in women than in men
# With the treatment we are looking for a reduction
baseline_int = 50 + 0.1*age
baseline = sapply(
1:n_total,
function(i){
rnorm(1, mean=baseline_int[i], sd=3)
}
)
# These will actually be added at the 'run trial' stage in shiny
hidden_norm = rnorm(n=n_total, mean=0, sd=1)
hidden_unif = runif(n=n_total, min=0, max=1)
hidden_cat = as.factor(sample(c("A", "B", "C"), size=n_total, replace=T))
df_part =  data.frame(ID = ID, sex=sex, age=age, baseline = baseline,
hid_norm = hidden_norm,
hid_unif = hidden_unif,
hid_cat = hidden_cat)
}
run_trial = function(
df_alloc,
coef_baseline=1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.3,
sd_err=3
){
n_tot = nrow(df_alloc)
out_temp = coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
df_part100 = gen_part(100)
df_alloc100 = df_part100
df_alloc100$arm = as.factor(sample(c("A", "B"), size = 100, replace=T))
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
lm_prop100 = lm(outcome ~ baseline + arm + age + arm:age, data=df_run100)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_prop100)
plot(resid(lm_lin100)~fitted(lm_lin100), col=as.numeric(df_run100$arm))
plot(resid(lm_int100)~fitted(lm_int100), col=as.numeric(df_run100$arm))
plot(resid(lm_prop100)~fitted(lm_prop100), col=as.numeric(df_run100$arm))
plot(resid(lm_prop100)~df_run100$age, col=as.numeric(df_run100$arm))
df_part1k = gen_part(1000)
df_alloc1k = df_part1k
df_alloc1k$arm = as.factor(sample(c("A", "B"), size = 1000, replace=T))
df_run1k = run_trial(df_alloc1k,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1k = lm(outcome ~ baseline+arm+sex+age, data=df_run1k)
lm_int1k = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1k)
lm_prop1k = lm(outcome ~ baseline + arm + age + arm:age, data=df_run1k)
summary(lm_lin1k)
summary(lm_int1k)
summary(lm_prop1k)
# Resid plot for linear looks OK-ish until you colour by arm
plot(resid(lm_lin1k)~fitted(lm_lin1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_int1k)~fitted(lm_int1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_prop1k)~fitted(lm_prop1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_prop100)~df_run100$age, col=as.numeric(df_run100$arm))
plot(resid(lm_prop1k)~df_run1k$age, col=as.numeric(df_run1k$arm))
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
q()
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/CT4_assignment1_dashboard')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment2/CT4_assignment2')
dis_level = as.factor(sample(c("Mild", "Moderate", "Severe"),
size = n_total, replace = T,
prob = c(0.5,0.3, 0.2)))
n_total = 110
dis_level = as.factor(sample(c("Mild", "Moderate", "Severe"),
size = n_total, replace = T,
prob = c(0.5,0.3, 0.2)))
summary(dis_level)
hist(rnorm(1000, mean=27.5, sd=2))
?runif
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment2/CT4_assignment2')
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
install.packages("kableExtra")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?knitr::is_latex_output
library(tinytex)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(kableExtra)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
bookdown::render_book("index.Rmd", "bookdown::pdf_book")
q()
