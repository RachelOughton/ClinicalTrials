coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = intercept + coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
intercept=50,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
df_part1000 = gen_part(1000)
df_alloc1000 = df_part1000
df_alloc1000$arm = sample(c("A", "B"), size=1000, replace=T)
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
run_trial = function(
df_alloc,
coef_baseline,
coef_arm,
coef_sex,
coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = intercept + coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
run_trial = function(
df_alloc,
coef_baseline,
coef_arm,
coef_sex,
coef_armsex,
coef_armage,
coef_norm,
coef_unif,
coef_cat,
sd_err
){
n_tot = nrow(df_alloc)
out_temp = coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
# VERY GOOD START!
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
df_part1000 = gen_part(1000)
df_alloc1000 = df_part1000
df_alloc1000$arm = sample(c("A", "B"), size=1000, replace=T)
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=2,
coef_armsex=-1,
coef_armage=0,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
cor(df_run100$outcome[df_run100$arm==0], df_run100$baseline[df_run100$arm == 0])
cor(df_run100$outcome[df_run100$arm==1], df_run100$baseline[df_run100$arm == 1])
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=1.5,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1000 = lm(outcome ~ baseline+arm+sex+age, data=df_run1000)
lm_int1000 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1000)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_int1000)
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_int1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
lm_inta1000 = lm(outcome ~ baseline + arm + sex+ age +arm*age, data=df_run1000)
plot(resid(lm_inta1000)~df_run1000$age, col=as.numeric(df_run1000$arm))
summary(lm_inta1000)
plot(outcome ~ age, data=df_fun1000, col=arm)
plot(outcome ~ age, data=df_run1000, col=arm)
plot(resid(lm_int1000)~fitted(lm_int1000), col=as.numeric(df_run1000$arm))
plot(resid(lm_lin1000)~fitted(lm_lin1000), col=as.numeric(df_run1000$arm))
df_run1000 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
df_run1000 = run_trial(df_alloc1000,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
gen_part = function(n_total){
ID = 1:n_total
sex = as.factor(sample(c("M", "F"), size = n_total, replace = T, prob = c(0.6,0.4)))
age = runif(n=n_total, min=50, max=65)
# I want the baseline measurement to be slightly higher in women than in men
# With the treatment we are looking for a reduction
baseline_int = 50 + 0.1*age
baseline = sapply(
1:n_total,
function(i){
rnorm(1, mean=baseline_int[i], sd=3)
}
)
# These will actually be added at the 'run trial' stage in shiny
hidden_norm = rnorm(n=n_total, mean=0, sd=1)
hidden_unif = runif(n=n_total, min=0, max=1)
hidden_cat = as.factor(sample(c("A", "B", "C"), size=n_total, replace=T))
df_part =  data.frame(ID = ID, sex=sex, age=age, baseline = baseline,
hid_norm = hidden_norm,
hid_unif = hidden_unif,
hid_cat = hidden_cat)
}
run_trial = function(
df_alloc,
coef_baseline=1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.3,
sd_err=3
){
n_tot = nrow(df_alloc)
out_temp = coef_baseline*df_alloc$baseline +
coef_arm*as.numeric(df_alloc$arm) +
coef_sex*as.numeric(df_alloc$sex) +
coef_armsex*as.numeric(df_alloc$arm)*as.numeric(df_alloc$sex)+
coef_armage*as.numeric(df_alloc$arm)*(df_alloc$age - 50)+
coef_norm*df_alloc$hid_norm +
coef_unif*df_alloc$hid_unif +
coef_cat*as.numeric(df_alloc$hid_cat) +
rnorm(n_tot, mean=0, sd=sd_err)
df_alloc$outcome = out_temp
df_alloc
}
df_part100 = gen_part(100)
df_alloc100 = df_part100
df_alloc100$arm = as.factor(sample(c("A", "B"), size = 100, replace=T))
df_run100 = run_trial(df_alloc100,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin100 = lm(outcome ~ baseline+arm+sex+age, data=df_run100)
lm_int100 = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run100)
lm_prop100 = lm(outcome ~ baseline + arm + age + arm:age, data=df_run100)
summary(lm_lin100)
summary(lm_lin1000)
summary(lm_int100)
summary(lm_prop100)
plot(resid(lm_lin100)~fitted(lm_lin100), col=as.numeric(df_run100$arm))
plot(resid(lm_int100)~fitted(lm_int100), col=as.numeric(df_run100$arm))
plot(resid(lm_prop100)~fitted(lm_prop100), col=as.numeric(df_run100$arm))
plot(resid(lm_prop100)~df_run100$age, col=as.numeric(df_run100$arm))
df_part1k = gen_part(1000)
df_alloc1k = df_part1k
df_alloc1k$arm = as.factor(sample(c("A", "B"), size = 1000, replace=T))
df_run1k = run_trial(df_alloc1k,
coef_baseline =1,
coef_arm=-4,
coef_sex=0,
coef_armsex=0,
coef_armage=2,
coef_norm=1,
coef_unif=2,
coef_cat=1.5,
sd_err=3)
lm_lin1k = lm(outcome ~ baseline+arm+sex+age, data=df_run1k)
lm_int1k = lm(outcome ~ (baseline+arm+sex+age)*(baseline+arm+sex+age), data=df_run1k)
lm_prop1k = lm(outcome ~ baseline + arm + age + arm:age, data=df_run1k)
summary(lm_lin1k)
summary(lm_int1k)
summary(lm_prop1k)
# Resid plot for linear looks OK-ish until you colour by arm
plot(resid(lm_lin1k)~fitted(lm_lin1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_int1k)~fitted(lm_int1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_prop1k)~fitted(lm_prop1k), col=as.numeric(df_run1k$arm))
plot(resid(lm_prop100)~df_run100$age, col=as.numeric(df_run100$arm))
plot(resid(lm_prop1k)~df_run1k$age, col=as.numeric(df_run1k$arm))
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/R_code')
q()
shiny::runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment1/CT4_assignment1_dashboard')
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment2/CT4_assignment2')
dis_level = as.factor(sample(c("Mild", "Moderate", "Severe"),
size = n_total, replace = T,
prob = c(0.5,0.3, 0.2)))
n_total = 110
dis_level = as.factor(sample(c("Mild", "Moderate", "Severe"),
size = n_total, replace = T,
prob = c(0.5,0.3, 0.2)))
summary(dis_level)
hist(rnorm(1000, mean=27.5, sd=2))
?runif
runApp('Library/CloudStorage/OneDrive-DurhamUniversity/AP2020_21/Teaching/2023/ClinicalTrials4H/Assignment2/CT4_assignment2')
1/3.5
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
((38)/(55))/((17)/(52))
log(((38)/(55))/((17)/(52)))
38*52
55*17
gcd(935, 1976)
hcf(935, 1976)
(1/38) - (1/55) + (1/17) - (1/52)
sqrt((1/38) - (1/55) + (1/17) - (1/52))
t2 = sqrt((1/38) - (1/55) + (1/17) - (1/52))
t1=log(((38)/(55))/((17)/(52)))
t1 - qnorm(0.975)*t2
t1 + qnorm(0.975)*t2
lrr =t1 - qnorm(0.975)*t2
urr =t1 + qnorm(0.975)*t2
exp(lrr)
exp(urr)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(separationplot)
fit1 <- glm(inmetro ~ percollege, data = midwest, family = binomial)
midwest$f1 <- predict(fit1, midwest, type = "response")
separationplot(pred = midwest$f1, actual = midwest$inmetro, show.expected = T)
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?toenail
library(faraway)
?toenail
?strep_tb
# Results of a randomized, placebo-controlled, prospective 2-arm trial of streptomycin 2 grams daily (arm A2) vs. placebo (arm A1) to treat tuberculosis in 107 young patients, as reported by the Streptomycin in Tuberculosis Trials Committee in 1948 in the British Medical Journal
glm(improved ~ arm + baseline_condition, data=strep_tb, family = binomial(link = "logit"))
# Results of a randomized, placebo-controlled, prospective 2-arm trial of streptomycin 2 grams daily (arm A2) vs. placebo (arm A1) to treat tuberculosis in 107 young patients, as reported by the Streptomycin in Tuberculosis Trials Committee in 1948 in the British Medical Journal
summary(glm(improved ~ arm + baseline_condition, data=strep_tb, family = binomial(link = "logit")))
# Results of a randomized, placebo-controlled, prospective 2-arm trial of streptomycin 2 grams daily (arm A2) vs. placebo (arm A1) to treat tuberculosis in 107 young patients, as reported by the Streptomycin in Tuberculosis Trials Committee in 1948 in the British Medical Journal
summary(glm(improved ~ arm + gender, data=strep_tb, family = binomial(link = "logit")))
# Results of a randomized, placebo-controlled, prospective 2-arm trial of streptomycin 2 grams daily (arm A2) vs. placebo (arm A1) to treat tuberculosis in 107 young patients, as reported by the Streptomycin in Tuberculosis Trials Committee in 1948 in the British Medical Journal
summary(glm(improved ~ arm + baseline_temp, data=strep_tb, family = binomial(link = "logit")))
# Results of a randomized, placebo-controlled, prospective 2-arm trial of streptomycin 2 grams daily (arm A2) vs. placebo (arm A1) to treat tuberculosis in 107 young patients, as reported by the Streptomycin in Tuberculosis Trials Committee in 1948 in the British Medical Journal
summary(glm(improved ~ arm + dose_strep_g, data=strep_tb, family = binomial(link = "logit")))
?indo_rct
summary(glm(outcome ~ site + gender + sod + rx, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + bstent + sod + rx, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + chole + sod + rx, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + pbmal + sod + rx, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + trsin + sod + rx, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + train + sod + rx, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ ., data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + risk + pep + rep, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + risk + pep + rep, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + risk + pep + recpanc, data=indo_rct, family = binomial(link = "logit")))
summary(glm(outcome ~ site + risk + rx, data=indo_rct, family = binomial(link = "logit")))
summary(indo_rct$recpanc)2*4*5
2*4*5
602/40
summary(indo_rct$risk)
unique(indo_rct$risk)
names(indo_rct)
indo_exp = indo_rct[,c(2,4,32)]
unique(indo_exp)
dim(unique(indo_exp))
?predict.glm
fit_fact = predict(glm_indo, newdata=indo_fact)
glm_indo = glm(outcome ~ site + risk + rx, data=indo_rct, family = binomial(link = "logit"))
indo_exp = indo_rct[,c(2,4,32)]
indo_fact = unique(indo_exp)
fit_fact = predict(glm_indo, newdata=indo_fact)
dim(fit_fact)
fit_fact
fit_fact = predict(glm_indo, newdata=indo_fact, se.fit=T, type="response")
fit_fact
indo_fact$fit = fit_fact$fit
indo_fact$fit_se = fit_fact$se.fit
for (i in 1:nrow(indo_fact)){
indo_sub = indo_rct[
(indo_rct$site == indo_fact$site[i])&(indo_rct$risk == indo_fact$risk[i])&(indo_rct$rx == indo_fact$rx[i]),
]
}
indo_sub
fit_fact = predict(glm_indo, newdata=indo_fact, se.fit=T, type="response")
indo_fact$fit = fit_fact$fit
indo_fact$fit_se = fit_fact$se.fit
indo_fact$est = rep(NA, nrow(indo_fact))
for (i in 1:nrow(indo_fact)){
indo_sub = indo_rct[
(indo_rct$site == indo_fact$site[i])&(indo_rct$risk == indo_fact$risk[i])&(indo_rct$rx == indo_fact$rx[i]),
indo_fact$est[i] = sum(indo_sub$outcome)/nrow(indo_sub)
indo_fact$est = rep(NA, nrow(indo_fact))
for (i in 1:nrow(indo_fact)){
indo_sub = indo_rct[
(indo_rct$site == indo_fact$site[i])&(indo_rct$risk == indo_fact$risk[i])&(indo_rct$rx == indo_fact$rx[i]),
]
indo_fact$est[i] = sum(indo_sub$outcome)/nrow(indo_sub)
}
summary(indo_rct$outcome)
count(indo_rct$outcome=="0_no")
sum(indo_rct$outcome=="0_no")
indo_fact$est = rep(NA, nrow(indo_fact))
for (i in 1:nrow(indo_fact)){
indo_sub = indo_rct[
(indo_rct$site == indo_fact$site[i])&(indo_rct$risk == indo_fact$risk[i])&(indo_rct$rx == indo_fact$rx[i]),
]
indo_fact$est[i] = (sum(indo_sub$outcome=="0_no"))/nrow(indo_sub)
}
indo_fact
indo_fact
indo_fact$est = rep(NA, nrow(indo_fact))
for (i in 1:nrow(indo_fact)){
indo_sub = indo_rct[
(indo_rct$site == indo_fact$site[i])&(indo_rct$risk == indo_fact$risk[i])&(indo_rct$rx == indo_fact$rx[i]),
]
indo_fact$est[i] = (sum(indo_sub$outcome=="1_yes"))/nrow(indo_sub)
}
indo_fact
?facet_wrap
ggplot(data=indo_fact[indo_fact$rx==0,], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=3)
indo_fact
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=3)
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=3)+theme_bw() + geom_point(aes(y=fit), pch=1)
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=3)+theme_bw() + geom_point(aes(y=fit), pch=1) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*se, yend=fit+1.96*se))
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=3)+theme_bw() + geom_point(aes(y=fit), pch=1) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=2)+theme_bw() + geom_point(aes(y=fit), pch=1) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=4)+theme_bw() + geom_point(aes(y=fit), pch=1) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site, fill=site)) +
geom_point(aes(y=est), pch=4)+theme_bw() + geom_point(aes(y=fit), pch=1) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est), pch=4)+theme_bw() + geom_point(aes(y=fit), pch=16) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))
indo_fact$est = rep(NA, nrow(indo_fact))
indo_fact$size = rep(NA, nrow(indo_fact))
for (i in 1:nrow(indo_fact)){
indo_sub = indo_rct[
(indo_rct$site == indo_fact$site[i])&(indo_rct$risk == indo_fact$risk[i])&(indo_rct$rx == indo_fact$rx[i]),
]
indo_fact$est[i] = (sum(indo_sub$outcome=="1_yes"))/nrow(indo_sub)
indo_fact$size[i] = nrow(indo_sub)
}
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=4) +
geom_point(aes(y=fit), pch=16) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()
ggplot(data=indo_fact[indo_fact$rx=="0_placebo",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()
levels(indo_rct$rx)
plot1 = ggplot(data=indo_fact[indo_fact$rx=="1_indomethacin",], aes(x=risk, col=site)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()
plot1
grid.arrange(plot0, plot1, nrow=1)
# work macbook
setwd("/Users/rachelo/Documents/GitRepos/clinicaltrials")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
plot_s1 = ggplot(data=indo_fact[indo_fact$site=="1_UM",], aes(x=risk, col=rx)) +
geom_point(aes(y=est, size=size), pch=16) +
geom_point(aes(y=fit), pch=4) +
geom_segment(aes(x=risk, xend=risk, y=fit-1.96*fit_se, yend=fit+1.96*fit_se))+
theme_bw()+ggtitle("Control Group")
plot_s1
plot_s1
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
